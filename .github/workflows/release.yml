name: Publish Release to Maven Central

on:
  release:
    types: [ created ] # This workflow runs when a new GitHub release is created

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_TOKEN }}

    steps:
      # 1. Check out the repository code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache Gradle dependencies
      - name: Cache Gradle build
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      # 4. Grant execute permission for gradlew
      - name: Grant Gradlew executable permissions
        run: chmod +x gradlew

      # 5. Derive version from tag
      - name: Derive version from tag
        id: version
        run: |
          RAW_TAG='${{ github.ref_name }}'
          VERSION="${RAW_TAG#v}"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      # 6. Import and fix the GPG key
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_SECRET_KEY }}
          passphrase: ${{ secrets.GPG_SECRET_KEY_PASSPHRASE }}

        # 7. Write signing config to gradle.properties
      - name: Write signing config
        run: |
          KEY_ID=$(gpg --list-secret-keys --keyid-format=long | awk '/sec/ {print $2}' | sed 's|^.*/||' | head -n1)
          {
          echo "signing.gnupg.executable=gpg"
          echo "signing.gnupg.keyName=$KEY_ID"
          echo "signing.gnupg.passphrase=${{ secrets.GPG_SECRET_KEY_PASSPHRASE }}"
          } >> gradle.properties

      # 8. Publish, Close, and Release to Maven Central
      - name: Publish Release to Maven Central
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_TOKEN }}
        run: |
          ./gradlew clean \
            -Pversion=${{ steps.version.outputs.version }} \
            nicetoast:publishToMavenCentral \
            --no-daemon --stacktrace